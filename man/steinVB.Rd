% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steinVB.R
\name{steinVB}
\alias{steinVB}
\title{Stein VB to optimise a particle cloud for a given model}
\usage{
steinVB(particles, model, kernel = RBFkernel, Nsub = nrow(particles),
  h = 0.01, alpha = 0.001, maxIter = 1000, rollingWindowSize = 5,
  threshold = 0.001, ...)
}
\arguments{
\item{particles}{An N x P matrix of N starting values of a P dimensional theta}

\item{model}{A function that inputs theta as its first argument that returns a list with two values, grad, the P dimensional vector of the derivative of the log joint density with respect to theta, and val, the value of the log joint density at this value}

\item{kernel}{A kernel function that inputs a vector x1, a vector x2, and smoothing parameter(s) h and returns a list with two values, grad, the P dimensional vector of the derivative of the kernel  with respect to X1, and val, the value of the kernel at these inputs.
Defaults to RBFkernel, which has code provided in this package.}

\item{Nsub}{The size of the subset of the particles to evaluate the gradient over, defaults to N}

\item{h}{kernel smoothing parameter, defaults to 0.01}

\item{alpha}{learning rate, defaults to 0.001}

\item{maxIter}{maximum number of iterations, defaults to 1000}

\item{rollingWindowSize}{Integer. Take the mean of this many most recent iterations to assess convergence. Defaults to 5.}

\item{threshold}{Maximum difference in mean value of ELBO before convergence is achieved. Defaults to 0.01.}

\item{...}{Extra arguments to pass to model}
}
\description{
This function inputs a particle cloud and derivative function, and returns the KL divergence minimising particle cloud.
}
